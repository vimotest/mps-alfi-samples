name: Java Build using Gradle Wrapper

on:
  workflow_call:

env:
  PROJECT_NAME: "mps-alfi-samples"
  ARCHIVE_NAME: "mps-alfi-samples"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # Install Xvfb for avoiding X11 window server AWTError when running tests (https://arbitrary-but-fixed.net/2022/01/21/headless-gui-github-actions.html)
      - name: Setup xvfb for X11 window server
        run: Xvfb :1 -screen 0 1600x1200x24 &

      # Prepare MPS
      - name: Download and Prepare MPS
        run: sh ./gradlew prepareMps

      # Build Project
      - name: Build Project
        run: sh ./gradlew mpsBuild

      # Test Project
      - name: Test Project
        run: sh ./gradlew mpsTest
        env:
          DISPLAY: :1

      # Stop Xvfb
      - name: Tear down xvfb
        run: killall Xvfb

      # Archive Artifacts
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            build/artifacts/${{ env.PROJECT_NAME }}/${{ env.ARCHIVE_NAME }}.zip

      # Archive Code
      - name: Package Code
        run: sh ./gradlew packageGeneratedCode
      - name: Archive Code
        uses: actions/upload-artifact@v3
        with:
          name: alfi-samples-code
          path: build/code-gen

  executeAlf:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - uses: actions/checkout@v3

      - name: Download Code
        uses: actions/download-artifact@v3
        with:
          name: alfi-samples-code
          path: build/code-gen

      - name: Install alf
        run: sh ./gradlew installAlf

      # Run ALF Tests
      - name: Test ALF Hamster Program
        run: sh ./gradlew executeAlfHamsterTests
      - name: Test ALF SWC Tests
        run: sh ./gradlew executeAlfSwcTests

  buildAndExecuteJava:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - uses: actions/checkout@v3

      - name: Download Code
        uses: actions/download-artifact@v3
        with:
          name: alfi-samples-code
          path: build/code-gen

      - name: Make Gradlew Executable from Gradle task
        run: chmod +x ./gradlew

      # Build Java Programs
      - name: Build Java Hamster Program
        run: sh ./gradlew buildJavaHamsterProject
      - name: Build Java SWC Program
        run: sh ./gradlew buildJavaSoftwareComponentProject

      # Run Java Tests
      - name: Test Java Hamster Program
        run: sh ./gradlew executeJavaHamsterTests
      - name: Test Java SWC Program
        run: sh ./gradlew executeJavaSoftwareComponentTests

  buildAndExecuteCpp:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - uses: actions/checkout@v3

      - name: Download Code
        uses: actions/download-artifact@v3
        with:
          name: alfi-samples-code
          path: build/code-gen

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.5
        with:
          cmake-version: '3.17.x'

      - name: Verify CMake installation
        run: which cmake

      - name: Set CMAKE_PATH environment variable
        run: echo "CMAKE_PATH=$(which cmake)" >> $GITHUB_ENV

      # Build C++ Programs
      - name: Build C++ Hamster Program
        run: sh ./gradlew buildCppHamsterProject --debug
      - name: Build C++ SWC Program
        run: sh ./gradlew buildCppSoftwareComponentProject

      # Run C++ Tests
      - name: Test C++ Hamster Program
        run: sh ./gradlew executeCppHamsterTests
      - name: Test C++ SWC Program
        run: sh ./gradlew executeCppSoftwareComponentTests

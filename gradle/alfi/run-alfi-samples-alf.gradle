import org.apache.tools.ant.taskdefs.condition.Os

apply from: 'gradle/alfi/download-install-alf.gradle'

task executeAlfHamsterTests(type: Exec) {
    group 'alfi-samples'
    description 'Execute ALF Hamster tests'
    dependsOn installAlf

    def alfInstallDir = "$buildDir/alf"
    def hamsterAlfScriptsDir = "$project.samplesCodeGenDir/hamster/alf"

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine 'cmd', '/c', "$alfInstallDir/alf.bat", "-m", hamsterAlfScriptsDir, "HamsterTestSuiteActivity"
    } else {
        commandLine "$alfInstallDir/alf", "-m", hamsterAlfScriptsDir, "HamsterTestSuiteActivity"
    }
    workingDir = alfInstallDir
    standardOutput = new ByteArrayOutputStream()

    doLast {
        def output = standardOutput.toString()
        println output

        if (!output.contains("FINISHED") || output.contains("FAILED")) {
            throw new GradleException("alf tests failed")
        }
    }
}

task executeAlfSwcTests(type: Exec) {
    group 'alfi-samples'
    description 'Execute ALF SWC tests'
    dependsOn installAlf

    def alfInstallDir = "$buildDir/alf"
    def swcAlfScriptsDir = "$project.samplesCodeGenDir/swc/alf".replace('\\', '/')

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine 'cmd', '/c', "$alfInstallDir/alf.bat", "-m", swcAlfScriptsDir, "Webstore_ComponentTestActivity"
    } else {
        commandLine "$alfInstallDir/alf", "-m", swcAlfScriptsDir, "Webstore_ComponentTestActivity"
    }
    workingDir = alfInstallDir
    standardOutput = new ByteArrayOutputStream()

    doLast {
        def output = standardOutput.toString()
        println output

        if (!output.contains("FINISHED") || output.contains("FAILED")) {
            throw new GradleException("alf tests failed")
        }
    }
}
